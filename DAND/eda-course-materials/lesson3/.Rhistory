getwd()
summary(mtcars)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
mtcars$year <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
# install.packages('knitr', dependencies = T)
# library(knitr)
efficient <- mtcars[mtcars$mpg > 23]
summary(mtcars)
efficient <- mtcars[mpg > 23]
efficient <- mtcars[mtcars.mpg > 23]
efficient <- mtcars[mtcars$mpg > 23]
efficient <- mtcars[mtcars$mpg > 23,]
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", YOUR_NAME)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", 'YOUR_NAME')
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
# 10. Read the documentation for row.names if you're want to know more.
?row.names
# Run this code to see the current row names in the data frame.
row.names(mtcars)
# Run this code to change the row names of the cars to numbers.
row.names(mtcars) <- c(1:32)
# Now print out the data frame by running the code below.
mtcars
data(mtcars)
head(mtcars, 10)
# The head() function prints out the first six rows of a data frame
# by default. Run the code below to see.
head(mtcars)
# I think you'll know what this does.
tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
str(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
mtcars[mtcars$.qsec <= 16.9, ]
mtcars[mtcars$qsec <= 16.9, ]
lightcars <- mtcars[mtcars$wt < 2000, ]
lightcars <- mtcars[mtcars$wt < 2000, ]
dim(lightcars)
lightcars
mtcars$year <- 1974
mtcars$year <- 1974
mtcars$year <- 1974
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars <- subset(mtcars, select = -year)
mtcars <- subset(mtcars, select = -year)
mtcars$year <- 1974
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars
mtcars$year <- 1974
mtcars
#mtcars <- subset(mtcars, select = -year)
mtcars[,-year]
mtcars$year <- c(1973, 1974)
mtcars$year <- c(1973, 1974)
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars
rm(cond)
rm(efficient)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
mtcars[mtcars$mpg >= 30 | mtcars$hp < 60]
mtcars[(mtcars$mpg >= 30 | mtcars$hp < 60), ]
reddit <- read.csv('reddit.csv')
getwd()
setwd('/Users/nikhil/Desktop/Udacity_LiveHelp/DAND/eda-course-materials/lesson2')
reddit <- read.csv('reddit.csv')
install.packages('ggplot2', dependencies = T)
library(ggplot2)
reddit.head()
head(readdit)
head(reddit)
reddit$age.range.order = ordered(reddit$age.range, levels = c())
levels(reddit$age.range)
reddit$age.range.order = ordered(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
levels(reddit$age.range)
reddit$age.range = ordered(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
levels(reddit$age.range)
pf
list.files()
setwd('/Users/nikhil/Desktop/Udacity_LiveHelp/DAND/eda-course-materials/lesson3')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf.head()
head(pf)
bt(pf$friend_count, pf$gender, summary
)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
qplot(x=tenure, data=pf)
qplot(x=tenure, data=pf, bins=30, color='blue')
pf <- pf.dropna(any)
pf <- pf.drop_na()
isna(pf)
is_na(pf)
qplot(x=tenure, data=pf, bins=30, color='blue', facet=gender)
qplot(x=tenure, data=pf, bins=30, color='blue', facet=pf$gender)
qplot(x=tenure, data=pf, bins=30, color='blue', facets =pf$gender)
qplot(x=tenure, data=pf, bins=30, color='blue', facets=gender)
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(gender)
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender)
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender~)
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender~pf$age)
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender~dob_month)
is.na(pf$gender)
pf[!is.na(pf$gender), ]
pf[is.na(pf$gender), ]
pf <- pf[is.na(pf$gender), ]
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender~dob_month)
history
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf[!is.na(pf$gender), ]
pf <- pf[!is.na(pf$gender), ]
qplot(x=tenure, data=pf, bins=30, color='blue') + facet_wrap(pf$gender~dob_month)
qplot(x=age, data=pf)
qplot(x=age, data=pf, xlim=90)
qplot(x=age, data=pf, xlim=90, bins=1)
qplot(x=age, data=pf, xlim=c(0,90), bins=1)
qplot(x=age, data=pf, xlim=c(0,90), bins=90)
qplot(x=age, data=pf, xlim=c(0,90), bins=90) + facet_wrap(gender)
qplot(x=age, data=pf, xlim=c(0,90), bins=90) + facet_wrap(~ gender)
qplot(x=age, data=pf, xlim=c(0,90), bins=90) + facet_wrap(~ gender) + color('blue')
qplot(x=age, data=pf, xlim=c(0,90), bins=90) + facet_wrap(~ gender) + colors('blue')
qplot(x=age, data=pf, xlim=c(0,90), bins=90 + color='blue') + facet_wrap(~ gender)
qplot(x=age, data=pf, xlim=c(0,90), bins=90, color='blue') + facet_wrap(~ gender)
qplot(x=age, data=pf, xlim=c(0,90), bins=90, color='blue', margins='black') + facet_wrap(~ gender)
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
